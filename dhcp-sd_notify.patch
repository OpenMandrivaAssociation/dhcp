diff -Naur dhcp-4.4.1/configure.ac dhcp-4.4.1.tpg/configure.ac
--- dhcp-4.4.1/configure.ac	2018-02-21 14:30:46.000000000 +0000
+++ dhcp-4.4.1.tpg/configure.ac	2019-02-28 14:37:30.720000000 +0000
@@ -979,6 +979,17 @@
     AC_SUBST(LDAP_CFLAGS, [$LDAP_CFLAGS])
 fi
 
+AC_ARG_WITH(systemd,
+        AC_HELP_STRING([--with-systemd],
+                       [enable sending status notifications to systemd daemon (default is no)]),
+        [systemd=$withval],
+        [systemd=no])
+
+if test x$systemd = xyes ; then
+   AC_CHECK_LIB(systemd, sd_notifyf, ,
+                AC_MSG_FAILURE([*** systemd library not present - do you need to install systemd-libs package?]))
+fi
+
 # Append selected warning levels to CFLAGS before substitution (but after
 # AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[]])],[],[]) & etc).
 CFLAGS="$CFLAGS $STD_CWARNINGS"
diff -Naur dhcp-4.4.1/relay/dhcrelay.c dhcp-4.4.1.tpg/relay/dhcrelay.c
--- dhcp-4.4.1/relay/dhcrelay.c	2019-02-28 14:36:04.006000000 +0000
+++ dhcp-4.4.1.tpg/relay/dhcrelay.c	2019-02-28 14:39:27.014000000 +0000
@@ -32,6 +32,10 @@
 #include <sys/time.h>
 #include <isc/file.h>
 
+#ifdef HAVE_LIBSYSTEMD
+#include <systemd/sd-daemon.h>
+#endif
+
 TIME default_lease_time = 43200; /* 12 hours... */
 TIME max_lease_time = 86400; /* 24 hours... */
 struct tree_cache *global_options[256];
@@ -816,6 +820,13 @@
 	signal(SIGTERM, dhcp_signal_handler);  /* kill */
 #endif
 
+#ifdef HAVE_LIBSYSTEMD
+        /* We are ready to process incomming packets. Let's notify systemd */
+        sd_notifyf(0, "READY=1\n"
+                   "STATUS=Dispatching packets...\n"
+                   "MAINPID=%lu",
+                   (unsigned long) getpid());
+#endif
 	/* Start dispatching packets and timeouts... */
 	dispatch();
 
diff -Naur dhcp-4.4.1/server/dhcpd.c dhcp-4.4.1.tpg/server/dhcpd.c
--- dhcp-4.4.1/server/dhcpd.c	2019-02-28 14:36:04.007000000 +0000
+++ dhcp-4.4.1.tpg/server/dhcpd.c	2019-02-28 14:40:27.799000000 +0000
@@ -57,6 +57,10 @@
 gid_t set_gid = 0;
 #endif /* PARANOIA */
 
+#ifdef HAVE_LIBSYSTEMD
+#include <systemd/sd-daemon.h>
+#endif
+
 struct class unknown_class;
 struct class known_class;
 
@@ -1057,6 +1061,14 @@
 	/* Log that we are about to start working */
 	log_info("Server starting service.");
 
+#ifdef HAVE_LIBSYSTEMD
+        /* We are ready to process incomming packets. Let's notify systemd */
+        sd_notifyf(0, "READY=1\n"
+                   "STATUS=Dispatching packets...\n"
+                   "MAINPID=%lu",
+                   (unsigned long) getpid());
+#endif
+
 	/*
 	 * Receive packets and dispatch them...
 	 * dispatch() will never return.
